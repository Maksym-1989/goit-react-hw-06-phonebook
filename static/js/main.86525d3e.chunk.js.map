{"version":3,"sources":["components/Filter/Filter.module.css","components/app/App.module.css","redux/phonebook/counter-types.js","redux/phonebook/phonebook-actions.js","components/contactForm/ContactForm.js","components/section/Section.js","components/contactList/ContactList.js","components/Filter/Filter.js","components/app/App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","ON_CHANGE_FILTER","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","onChangeFilter","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","some","element","console","log","alert","onSubmit","this","className","css","label","input","type","pattern","title","required","onChange","button","Component","mapDispatchToProps","connect","items","Section","children","toUpperCase","defaultProps","filter","filteredContacts","filtertoLowerCase","toLowerCase","contact","includes","getFilteredContacts","map","item","text","onClick","target","App","container","itemsReducer","createReducer","contactsArrray","filterReducer","_","contactsReducer","combineReducers","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.86525d3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__14TKo\",\"input\":\"Filter_input__dYuwy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3oAcL\"};","const ADD_CONTACT = \"phonebook/addContact\";\r\nconst DELETE_CONTACT = \"phonebook/deleteContact\";\r\nconst ON_CHANGE_FILTER = \"phonebook/changeFilter\";\r\nconst GET_FILTERED_CONTACT = \"phonebook/filteredContact\";\r\n\r\nexport { ADD_CONTACT, DELETE_CONTACT, GET_FILTERED_CONTACT, ON_CHANGE_FILTER };\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD_CONTACT, DELETE_CONTACT, ON_CHANGE_FILTER } from \"./counter-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(ADD_CONTACT, (name, number) => {\r\n  return {\r\n    payload: { name: name, number: number, id: uuidv4() },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(DELETE_CONTACT);\r\n\r\nconst onChangeFilter = createAction(ON_CHANGE_FILTER);\r\n\r\nexport { addContact, deleteContact, onChangeFilter };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    if (this.props.contacts.some((element) => element.name === name)) {\r\n      console.log(alert(`${name} is already in contacts`));\r\n      return;\r\n    }\r\n\r\n    this.props.addContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className={css.label}>\r\n          Name\r\n          <input\r\n            className={css.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n\r\n        <label className={css.label}>\r\n          Number\r\n          <input\r\n            className={css.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={css.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport css from \"./Sections.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"Some title\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nconst ContactList = ({ items, filter, deleteContact }) => {\r\n  const getFilteredContacts = () => {\r\n    const filtertoLowerCase = filter.toLowerCase();\r\n\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filtertoLowerCase)\r\n    );\r\n  };\r\n\r\n  const filteredContacts = getFilteredContacts();\r\n\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ name, number, id }) => (\r\n        <li key={id} className={css.item}>\r\n          <p className={css.text}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = { deleteContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onChangeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  const onChange = (event) => {\r\n    onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <label className={css.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = { onChangeFilter };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport Section from \"../section/Section\";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport css from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={css.container}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n\n\n// class App extends Component {\n//   state = {\n//     contacts: contactsArray,\n//     filter: \"\",\n//   };\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (name, number) => {\n//     if (this.state.contacts.some((element) => element.name === name)) {\n//       console.log(alert(`${name} is already in contacts`));\n//       return;\n//     }\n\n//     const contact = {\n//       id: uuidv4(),\n//       name: name,\n//       number: number,\n//     };\n\n//     this.setState(({ contacts }) => ({\n//       contacts: [contact, ...contacts],\n//     }));\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   onChangeFilter = (event) => {\n//     this.setState({\n//       filter: event.currentTarget.value,\n//     });\n//   };\n\n//   getFilteredContacts = () => {\n//     const filter = this.state.filter.toLowerCase();\n\n//     return this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter)\n//     );\n//   };\n\n//   render() {\n//     const filteredContacts = this.getFilteredContacts();\n\n//     return (\n//       <div className={css.container}>\n//         <Section title=\"Phonebook\">\n//           <ContactForm addContact={this.addContact} />\n//         </Section>\n//         <Section title=\"Contacts\">\n//           {!this.state.contacts.length ? (\n//             <></>\n//           ) : (\n//             <>\n//               <Filter\n//                 value={this.state.filter}\n//                 onChange={this.onChangeFilter}\n//               />\n//               <ContactList\n//                 contacts={filteredContacts}\n//                 deleteContact={this.deleteContact}\n//               />\n//             </>\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import { combineReducers } from \"redux\";\r\nimport { ADD_CONTACT, DELETE_CONTACT, ON_CHANGE_FILTER } from \"./counter-types\";\r\nimport contactsArrray from \"../../data/Contacts.json\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst itemsReducer = createReducer(contactsArrray, {\r\n  [ADD_CONTACT]: (state, { payload }) => [payload, ...state],\r\n  [DELETE_CONTACT]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [ON_CHANGE_FILTER]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./phonebook/phonebook-reducers\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"ContactList\",\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// const rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\n// const store = configureStore({\r\n//   reducer: rootReducer,\r\n// });\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport \"modern-normalize/modern-normalize.css\";\n/////////////////////////////////////////////////\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1UR5X\",\"input\":\"ContactForm_input__3kPxh\",\"button\":\"ContactForm_button__2-VUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3318V\",\"text\":\"ContactList_text__mr7Aw\",\"button\":\"ContactList_button__2SyrB\"};"],"sourceRoot":""}